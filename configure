#! /bin/sh
# Run this file to recreate the current configuration.

SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL

# run a test over a loop
# and return the first that works
# eg
# LS=$(test_cmd which "lss ls")
test_cmd () {
  declare c=$1
  shift 1 
  for arg in "$@"
  do
    if eval $c $arg > /dev/null 2>&1
    then 
      echo $arg
      return $?
    fi
  done
  return $?
}
export -f test_cmd


CCS=("gcc" "cc")
CFLAGSS=("-I." "-fPIC")
DYNS=("ld -G" "libtool  -L.. -lc -dynamic -undefined dynamic_lookup")
MAKES=("gmake" "make")
OPTS=("-g")

# specify a temporary directory
TMP=/tmp

ARCH=$(uname -m)
HERE=$(pwd)
BPMS=${BPMS-$HERE}

# fixers
q='\/'
BPMS_=$(echo $BPMS | sed 's/\//Qq/g')
# initialise makefile
sed < $BPMS/src/Makefile.in 's/@BPMS@/'$BPMS_'/' | sed 's/Qq/'$q'/g' | sed 's/@ARCH@/'$ARCH'/' > $BPMS/src/makefile

mkdir -p bin/${ARCH}
PATH=".:bin:bin/${ARCH}:${PATH}"

# create test C code file
echo '#include <stdio.h>' > $TMP/test.c
echo 'int no_main(int argc,char ** argv){printf("hello world\\n");return(1);}' >> $TMP/test.c
echo '' >> $TMP/test.c

##################
# $CC
##################
export CC=$(test_cmd which $CCS)
sed < ${BPMS}/src/makefile 's/@CC@/'$CC'/' > $TMP/tmp.$$; mv $TMP/tmp.$$ ${BPMS}/src/makefile
################## 
# $OPT
##################
export OPT=$(test_cmd "${CC} $TMP/test.c -o $TMP/test.o -c" $OPTS)
sed < ${BPMS}/src/makefile 's/@OPT@/'$OPT'/' > $TMP/tmp.$$; mv $TMP/tmp.$$ ${BPMS}/src/makefile

##################
# $MAKE
##################
export MAKE=$(test_cmd which $MAKES)
sed < ${BPMS}/src/makefile 's/@MAKE@/'$MAKE'/' > $TMP/tmp.$$; mv $TMP/tmp.$$ ${BPMS}/src/makefile

# tidy up
rm -f $TMP/test.c
exit 0
