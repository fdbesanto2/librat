#! /bin/sh
# Run this file to recreate the current configuration.

# run a test over a loop
# and return the first that works
# eg
# LS=$(test_cmd which "lss ls")
test_cmd () {
  declare c="${1}"
  shift 1 
  declare rest = "${@}"
  echo "hello" "$rest" > '/dev/stderr'
  for arg in ${rest[@]}
  do
    echo "trying" > '/dev/stderr'
    echo $c $arg > '/dev/stderr'
    echo $arg $c > '/dev/stderr'
    if eval $c $arg > /dev/null 2>&1
    then 
      echo $arg
      echo "found $arg" > '/dev/stderr'
      return $?
    elif eval $arg $c > /dev/null 2>&1
    then
      echo $arg
      echo "found $arg" > '/dev/stderr' 
      return $?
    fi
  done
  return $?
}

CFLAGSS=("-O" "-O3" "-g")
CCS=("clang" "gcc" "cc")
DYNS=("libtool  -L.. -lc -dynamic -undefined dynamic_lookup" "ld -G")
OPTS=("-fPIC" "-I.")

# specify a temporary directory
TMP=/tmp

ARCH=$(uname -m)
HERE=$(pwd)
BPMS=${BPMS-$HERE}

# fixers
q='\/'
BPMS_=$(echo $BPMS | sed 's/\//Qq/g')
# initialise makefile
sed < $BPMS/src/Makefile.in 's/@BPMS@/'$BPMS_'/' | sed 's/Qq/'$q'/g' | sed 's/@ARCH@/'$ARCH'/' > $BPMS/src/makefile

mkdir -p bin/${ARCH}
PATH=".:bin:bin/${ARCH}:${PATH}"

# create test C code file
echo '#include <stdio.h>' > $TMP/test.c
echo 'int no_main(int argc,char ** argv){printf("hello world\\n");return(1);}' >> $TMP/test.c
echo '' >> $TMP/test.c

##################
# $CC
##################
CC=$(test_cmd "which -s" "${CCS}")
sed < ${BPMS}/src/makefile 's/@CC@/'$CC'/' > $TMP/tmp.$$; mv $TMP/tmp.$$ ${BPMS}/src/makefile
echo $CC

##################
# $CFLAGS
##################
CFLAGS=$(test_cmd "${CC} $TMP/test.c -o $TMP/test.o -c" "${CFLAGSS[*]}")
sed < ${BPMS}/src/makefile 's/@CFLAGS@/'$CFLAGS'/' > $TMP/tmp.$$; mv $TMP/tmp.$$ ${BPMS}/src/makefile
echo $CFLAGS

################## 
# $OPT
##################
OPT=$(test_cmd "${CC} ${CFLAGS} $TMP/test.c -o $TMP/test.o -c" "${OPTS[*]}")
sed < ${BPMS}/src/makefile 's/@OPT@/'$OPT'/' > $TMP/tmp.$$; mv $TMP/tmp.$$ ${BPMS}/src/makefile
echo $OPT

##################
# $DYN
##################
DYN=$(test_cmd "-o $TMP/test.so $TMP/test.o" "${DYNS[*]}")
sed < ${BPMS}/src/makefile 's/@DYN@/'$DYN'/' > $TMP/tmp.$$; mv $TMP/tmp.$$ ${BPMS}/src/makefile
echo $DYN

# tidy up
#rm -f $TMP/test.c
exit 0
