#! /bin/sh
# Run this file to recreate the current configuration.

SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL

# run a test over a loop
# and return the first that works
# eg
# if test_cmd which "lss ls"; then LS=$retval; else echo "error setting LS"; fi
test_cmd () {
  cmd=$1
  args=$2
  echo "cmd is $cmd"
  echo "options are $args"
  for arg in $args
  do
    if $cmd $arg > /dev/null 2>&1
    then 
      retval=$arg
      return 0
    fi
  done
  return 1
}

CCS=("gcc" "cc")
CFLAGSS=("-I." "-fPIC")
DYNS=("ld -G" "libtool  -L.. -lc -dynamic -undefined dynamic_lookup")
MAKES=("gmake" "make")
OPTS=("-g")

# specify a temporary directory
set TMP = /tmp

ARCH=$(uname -m)
HERE=$(pwd)
BPMS=${BPMS-$HERE}

# fixers
q='\/'
BPMS_=$(echo $BPMS | sed 's/\//Qq/g')
# initialise makefile
sed < $BPMS/src/Makefile.in 's/@BPMS@/'$BPMS_'/' | sed 's/Qq/'$q'/g' | sed 's/@ARCH@/'$ARCH'/' > $BPMS/src/makefile

mkdir -p bin/${ARCH}
PATH=".:bin:bin/${ARCH}:${PATH}"

# create test C code file
echo "#include <stdio.h>" > $TMP/test.c
echo 'int no_main(int argc,char ** argv){printf("hello world\n");return(1);}' >> $TMP/test.c
echo "" >> $TMP/test.c

##################
# $CC
##################
if test_cmd which $CCS; then CC=$retval; else echo "error setting CC";exit 1; fi

##################
# $OPT
##################
if test_cmd "${CC} $TMP/test.c -o $TMP/test.o -c" $OPTS; then OPT=$retval; else echo "error setting OPT";exit 1; fi
# tidy up
rm -f $TMP/test.c

